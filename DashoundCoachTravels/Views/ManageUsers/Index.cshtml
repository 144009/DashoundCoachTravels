@model IEnumerable<DashoundCoachTravels.Models.ApplicationUser>
@using DashoundCoachTravels.Helpers
@{
    ViewBag.Title = "Manage user accounts";
}
<h1>@ViewBag.Title</h1>
<br />
<p class="text-success">@ViewBag.StatusMessage</p>
<br />

<div class="container">
    <div class="form-group">
        <div class="input-group">
            <span class="input-group-addon"><i class="glyphicon glyphicon-search"></i></span>
            <input type="text" id="Search" placeholder="Search user" class="form-control" />
        </div>
    </div>
</div>

<table class="table">
    <tr>
        <th>User name</th>
        <th>Email</th>
        <th>Permissions type</th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Surname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Town)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumHouse)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NumFlat)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ZIPCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
    <tr class="Search">
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>

        @if (UserRoleHelper.IsAdmin(item.Id))
        {
            <td class="role-admin">Administrator</td>}
        @if (UserRoleHelper.IsEmployee(item.Id))
        {
            <td class="role-admin">Employee</td>}
        @if (UserRoleHelper.IsUser(item.Id))
        {
            <td class="role-admin">Customer/Basic</td>}
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Surname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Country)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Town)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NumHouse)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.NumFlat)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ZIPCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhoneNumber)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
            @Html.ActionLink("Permissions", "EditUserRoles", new { id = item.Id })
        </td>
    </tr>
    }

</table>

<div>
    @Html.ActionLink("Back to list", "Index", "Manage", routeValues: null, htmlAttributes: new { })
</div>

<script type="text/javascript">
    $(document).ready(function () {
        function Contains(text_one, text_two) {
            if (text_one.indexOf(text_two) != -1) { return true; }
        }
        $("#Search").keyup(function () {
            var searchText = $("#Search").val().toLowerCase();
            $(".Search").each(function () {
                if (!Contains($(this).text().toLowerCase(), searchText)) {
                    $(this).hide();
                } else {
                    $(this).show();
                }
            });

        });
    })
</script>