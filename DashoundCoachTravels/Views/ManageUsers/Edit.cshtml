@model DashoundCoachTravels.Models.ApplicationUser
@using DashoundCoachTravels.Helpers

<div id="SubPagesTitle">
    <h1>Edit account details</h1>
    <div id="SubpagesAdminButtons">
        <div style="font-weight:bold; font-size:16px;">
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

<section id="pages">
    <div id="SubpagesMainContent">
        <div class="row">
            <div class="col-xs-12">
                <div class="container" id="SubpagesTableList">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <table class="table-responsive table-striped" id="SubpagesTableList">
                            <thead id="SubpagesTableList">
                                <tr id="SubpagesTableList-head">
                                    <th>
                                        Permission Type
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.UserName)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Email)
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="SubpagesTableList">
                                <tr id="Search" class="Search">
                                    <td class="role-admin">
                                        @if (UserRoleHelper.IsAdmin(Model.Id))
                                        { <i>Administrator</i>}
                                        @if (UserRoleHelper.IsEmployee(Model.Id))
                                        { <i>Employee</i>}
                                        @if (UserRoleHelper.IsUser(Model.Id))
                                        { <i>Customer / Basic</i>}
                                        @Html.ActionLink("Change role", "EditUserRoles", new { id = Model.Id })
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.UserName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(model => model.Email)
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <hr />
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.EmailConfirmed)
                            @Html.HiddenFor(model => model.PasswordHash)
                            @Html.HiddenFor(model => model.Email)
                            @Html.HiddenFor(model => model.UserName)
                            @Html.HiddenFor(model => model.SecurityStamp)
                            @Html.HiddenFor(model => model.PhoneNumberConfirmed)
                            @Html.HiddenFor(model => model.TwoFactorEnabled)
                            @Html.HiddenFor(model => model.LockoutEndDateUtc)
                            @Html.HiddenFor(model => model.LockoutEnabled)
                            @Html.HiddenFor(model => model.AccessFailedCount)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Town, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Town, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Town, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NumHouse, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NumHouse, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NumHouse, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NumFlat, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NumFlat, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NumFlat, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ZIPCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ZIPCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ZIPCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>











